//booking.service.ts

import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class BookingService {
  private baseUrl = 'http://localhost:8080/bookings';

  constructor(private http: HttpClient) { }

  createBooking(userId: number, packageId: number, startDate: string): Observable<any> {
    const booking = { userId, packageId, startDate };
    return this.http.post(`${this.baseUrl}`, booking);
  }

  getUserBookings(userId: number): Observable<any> {
    return this.http.get(`${this.baseUrl}/user/${userId}`);
  }
}


//booking.component.ts

import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { BookingService } from 'src/app/services/booking.service';

@Component({
  selector: 'app-booking',
  templateUrl: './booking.component.html'
})
export class BookingComponent implements OnInit {
  packageId!: number;
  userId = 101; // Normally taken from login/session
  startDate = '';

  constructor(
    private bookingService: BookingService,
    private route: ActivatedRoute,
    private router: Router
  ) {}

  ngOnInit(): void {
    this.packageId = +this.route.snapshot.paramMap.get('packageId')!;
  }

  bookNow() {
    if (!this.startDate) {
      alert('Please select a start date.');
      return;
    }

    this.bookingService
      .createBooking(this.userId, this.packageId, this.startDate)
      .subscribe({
        next: (res) => {
          alert('Booking Successful!');
          this.router.navigate(['/payment', res.bookingId]);
        },
        error: () => {
          alert('Booking failed!');
        }
      });
  }
}


//booking.component.html
<div class="container mt-5">
  <h2>Book Your Package</h2>
  <p>Package ID: {{ packageId }}</p>

  <form (ngSubmit)="bookNow()">
    <div class="mb-3">
      <label for="startDate" class="form-label">Select Start Date:</label>
      <input
        type="date"
        id="startDate"
        class="form-control"
        [(ngModel)]="startDate"
        name="startDate"
        required
      />
    </div>

    <button type="submit" class="btn btn-primary">Book Now</button>
  </form>
</div>



//payment.component.ts
import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { PaymentService } from 'src/app/services/payment.service';

@Component({
  selector: 'app-payment',
  templateUrl: './payment.component.html'
})
export class PaymentComponent implements OnInit {
  bookingId!: number;
  userId = 101; // Replace with actual logged-in user
  paymentMethod = 'CREDIT_CARD';
  amount = 34999;  // You can fetch dynamically using BookingService

  constructor(private route: ActivatedRoute,
              private router: Router,
              private paymentService: PaymentService) {}

  ngOnInit(): void {
    this.bookingId = +this.route.snapshot.paramMap.get('bookingId')!;
  }

  pay() {
    const paymentDto = {
      bookingId: this.bookingId,
      userId: this.userId,
      amount: this.amount,
      paymentMethod: this.paymentMethod
    };
    this.paymentService.makePayment(paymentDto).subscribe({
      next: res => {
        alert('Payment Successful');
        this.router.navigate(['/confirmation', this.bookingId]);
      },
      error: err => alert('Payment failed!')
    });
  }
}

//payment.service.ts
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class PaymentService {
  private baseUrl = 'http://localhost:8080/payments';

  constructor(private http: HttpClient) {}

  makePayment(payment: any): Observable<any> {
    return this.http.post(`${this.baseUrl}`, payment);
  }
}

//
