//app.routes.ts
import { Routes } from '@angular/router';
import { BookingComponent } from './components/booking/booking.component';
import { PaymentComponent } from './components/payment/payment.component';
import { ConfirmationComponent } from './components/confirmation/confirmation.component';

export const routes: Routes = [
  { path: 'book/:packageId', component: BookingComponent },
  { path: 'payment/:bookingId', component: PaymentComponent },
  { path: 'confirmation/:bookingId', component: ConfirmationComponent },
  { path: '**', redirectTo: '', pathMatch: 'full' }
];


//booking.service.ts

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({ providedIn: 'root' })
export class BookingService {
  private baseUrl = 'http://localhost:8080/bookings';

  constructor(private http: HttpClient) {}

  createBooking(userId: number, packageId: number, startDate: string): Observable<any> {
    return this.http.post(`${this.baseUrl}`, { userId, packageId, startDate });
  }
}


//booking.component.ts

import { Component } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { BookingService } from 'src/app/services/booking.service';

@Component({
  selector: 'app-booking',
  standalone: true,
  imports: [],
  templateUrl: './booking.component.html'
})
export class BookingComponent {
  packageId!: number;
  userId = 101; // Use real session/user value
  startDate = '';

  constructor(
    private route: ActivatedRoute,
    private router: Router,
    private bookingService: BookingService
  ) {
    this.packageId = +this.route.snapshot.paramMap.get('packageId')!;
  }

  bookNow() {
    if (!this.startDate) {
      alert('Please select a start date');
      return;
    }

    this.bookingService.createBooking(this.userId, this.packageId, this.startDate).subscribe({
      next: (res) => {
        const bookingId = res.bookingId;
        this.router.navigate(['/payment', bookingId]);
      },
      error: () => {
        alert('Booking failed. Try again.');
      }
    });
  }
}


//booking.component.html
<div class="container mt-5">
  <h2>Book Your Package</h2>
  <p><strong>Package ID:</strong> {{ packageId }}</p>

  <form (ngSubmit)="bookNow()">
    <div class="mb-3">
      <label for="startDate" class="form-label">Start Date</label>
      <input
        type="date"
        class="form-control"
        id="startDate"
        [(ngModel)]="startDate"
        name="startDate"
        required
      />
    </div>

    <button type="submit" class="btn btn-primary">Book Now</button>
  </form>
</div>


//payment.component.ts
import { Component } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { PaymentService } from 'src/app/services/payment.service';

@Component({
  selector: 'app-payment',
  standalone: true,
  imports: [],
  templateUrl: './payment.component.html'
})
export class PaymentComponent {
  bookingId!: number;
  userId = 101;
  paymentMethod = 'CREDIT_CARD';
  amount = 34999;

  constructor(
    private route: ActivatedRoute,
    private router: Router,
    private paymentService: PaymentService
  ) {
    this.bookingId = +this.route.snapshot.paramMap.get('bookingId')!;
  }

  payNow() {
    const payment = {
      userId: this.userId,
      bookingId: this.bookingId,
      amount: this.amount,
      paymentMethod: this.paymentMethod
    };

    this.paymentService.makePayment(payment).subscribe({
      next: () => {
        alert('Payment successful!');
        this.router.navigate(['/confirmation', this.bookingId]);
      },
      error: () => {
        alert('Payment failed.');
      }
    });
  }
}


//payment.component.html
<div class="container mt-5">
  <h2>Payment for Booking #{{ bookingId }}</h2>

  <form (ngSubmit)="payNow()">
    <div class="mb-3">
      <label for="amount" class="form-label">Amount</label>
      <input
        type="number"
        class="form-control"
        id="amount"
        [(ngModel)]="amount"
        name="amount"
        readonly
      />
    </div>

    <div class="mb-3">
      <label for="method" class="form-label">Payment Method</label>
      <select
        id="method"
        class="form-select"
        [(ngModel)]="paymentMethod"
        name="paymentMethod"
      >
        <option value="CREDIT_CARD">Credit Card</option>
        <option value="DEBIT_CARD">Debit Card</option>
        <option value="UPI">UPI</option>
        <option value="NET_BANKING">Net Banking</option>
      </select>
    </div>

    <button type="submit" class="btn btn-success">Make Payment</button>
  </form>
</div>


//payment.service.ts
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({ providedIn: 'root' })
export class PaymentService {
  private baseUrl = 'http://localhost:8080/payments';

  constructor(private http: HttpClient) {}

  makePayment(payment: any): Observable<any> {
    return this.http.post(`${this.baseUrl}`, payment);
  }
}


//confirmation.component.ts
import { Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';

@Component({
  selector: 'app-confirmation',
  standalone: true,
  imports: [],
  templateUrl: './confirmation.component.html'
})
export class ConfirmationComponent {
  bookingId!: number;

  constructor(private route: ActivatedRoute) {
    this.bookingId = +this.route.snapshot.paramMap.get('bookingId')!;
  }
}

//confirmation.component.html
<div class="container text-center mt-5">
  <h2>ðŸŽ‰ Booking Confirmed!</h2>
  <p>Your booking ID is <strong>{{ bookingId }}</strong>.</p>
  <p>Confirmation has been sent to your registered email.</p>
  <a routerLink="/" class="btn btn-primary mt-3">Back to Dashboard</a>
</div>


///////////
// Booking Component
{
  path: 'book/:packageId',
  loadComponent: () =>
    import('./components/booking/booking.component').then(m => m.BookingComponent)
},

// Payment Component
{
  path: 'payment/:bookingId',
  loadComponent: () =>
    import('./components/payment/payment.component').then(m => m.PaymentComponent)
},

// Confirmation Component
{
  path: 'confirmation/:bookingId',
  loadComponent: () =>
    import('./components/confirmation/confirmation.component').then(m => m.ConfirmationComponent)
}
